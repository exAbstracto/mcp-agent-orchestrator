[pytest]
# Project-wide pytest configuration for Multi-Agent Development System
# This ensures consistent test discovery and execution across all subcomponents

# Test discovery patterns
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Additional options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --showlocals

# Test markers for categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    makefile: marks tests as makefile command tests
    us003: marks tests related to US-003 (Message Queue)
    us006: marks tests related to US-006 (Task Coordinator)
    us007: marks tests related to US-007 (Channel Management)
    coordination: marks tests for multi-agent coordination
    performance: marks tests for performance measurement

# Test execution timeout (5 minutes)
timeout = 300

# Filter warnings to reduce noise
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning

# Minimum pytest version
minversion = 6.0

# Log configuration for debugging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration (when using --cov)
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */node_modules/*
    */__pycache__/*
    */htmlcov/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov 